func factorial_recursive(n: int): int {
	if n < 0 {
		WriteLine(`Cannot compute factorial of negative number {n}.`);
		Exit();
		return -1;
	}
	else if n == 0 {
		return 1;
	}
	else {
		return n * factorial_recursive(n - 1);
	}
}

func factorial_iterative(n: int): int {
	if n < 0 {
		WriteLine(`Cannot compute factorial of negative number {n}.`);
		Exit();
		return -1;
	}
	else if n == 0 {
		return 1;
	}

	let f = 1;

	for(let i = n; i > 1; i -= 1) {
		f *= i;
	}

	return f;
}

while true {
	Write('Please enter a number, or x to e[x]it: ');

	let input = ReadLine();

	if input == 'x' {
		break;
	}
	else if !IsFloat(input) {
		WriteLine(`{input} is not a valid number.`);
		continue;
	}

	let input = FloatToInt(Round(ParseFloat(input)));

	let a: int;
	let b: int;

	let time_a = Benchmark(() {
		a = factorial_recursive(input);
	});

	let time_b = Benchmark(() {
		b = factorial_iterative(input);
	});

	WriteLine('');

	WriteLine(`  * (Recursive) {input}! = {a}; {time_a} ms.`);
	WriteLine(`  * (Iterative) {input}! = {b}; {time_b} ms.`);

	if a != b {
		WriteLine(`{a} != {b}!`);
	}

	WriteLine('');
}